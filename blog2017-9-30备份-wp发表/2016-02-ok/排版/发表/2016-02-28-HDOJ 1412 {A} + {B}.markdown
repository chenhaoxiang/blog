---
layout: post
title: "HDOJ 1412 {A} + {B}"
date: 2016-02-28 09:20:28 +0800
comments: true
categories:----- HDOJ-JAVA,❶ ACM,❺ 算法及基础题,----- 基础题
tags: []
keyword: 陈浩翔, 谙忆
description: Problem Description 
给你两个集合，要求{A} + {B}. 
注:同一个集合中不会有两个相同的元素.Input 
每组输入数据分为三行,第一行有两个数字n,m(0import java.util.Arrays;
import java.util.Scanner;public class Main {
    public static void main(String[] ar 
---


Problem Description 
给你两个集合，要求{A} + {B}. 
注:同一个集合中不会有两个相同的元素.Input 
每组输入数据分为三行,第一行有两个数字n,m(0import java.util.Arrays;
import java.util.Scanner;public class Main {
    public static void main(String[] ar
&#60;!-- more --&#62;
----------

Problem Description
给你两个集合，要求{A} + {B}.
注:同一个集合中不会有两个相同的元素.
 

Input
每组输入数据分为三行,第一行有两个数字n,m(0 &#60; n,m>=10000),分别表示集合A和集合B的元素个数.后两行分别表示集合A和集合B.每个元素为不超出int范围的整数,每个元素之间有一个空格隔开.
 

Output
针对每组数据输出一行数据,表示合并后的集合,要求从小到大输出,每个元素之间有一个空格隔开.
 

Sample Input
1 2
1
2 3
1 2
1
1 2
 

Sample Output
1 2 3
1 2


```java
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		while (in.hasNext()) {
			int n = in.nextInt();
			int m = in.nextInt();
			int[] narr = new int[n];
			int[] marr = new int[m];
			for (int i = 0; i &#60; n; i++)
				narr[i] = in.nextInt();
			for (int i = 0; i &#60; m; i++)
				marr[i] = in.nextInt();

			Arrays.sort(narr);
			Arrays.sort(marr);
			int nid = 0;
			int mid = 0;
			while (nid &#60; n && mid &#60; m) {
				if (narr[nid] &#60; marr[mid])
					System.out.print(narr[nid++]);
				else if (narr[nid] &#62; marr[mid]) {
					System.out.print(marr[mid++]);
				} else {
					//相等
					System.out.print(marr[mid++]);
					nid++;
				}
				if (nid &#60; n || mid &#60; m)
					System.out.print(" ");
			}
			if (nid == n) {
				for (int i = mid; i &#60; m; i++) {
					System.out.print(marr[i]);
					if (i != m - 1)
						System.out.print(" ");
				}
			} else {
				for (int i = nid; i &#60; n; i++) {
					System.out.print(narr[i]);
					if (i != n - 1)
						System.out.print(" ");
				}
			}
			System.out.println();

		}

	}
}

```