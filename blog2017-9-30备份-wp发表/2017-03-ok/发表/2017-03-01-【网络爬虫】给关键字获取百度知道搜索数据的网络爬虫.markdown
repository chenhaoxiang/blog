---
layout: post
title: "【网络爬虫】给关键字获取百度知道搜索数据的网络爬虫"
date: 2017-03-01 01:27:17 +0800
comments: true
categories:❷ Java大学之行,----- ⑦、爬虫
tags: [网络爬虫,百度知道,搜索,mysql]
keyword: 陈浩翔, 谙忆
description: 转载请注明出处：http://blog.csdn.net/qq_26525215
本文源自【大学之旅_谙忆的博客】
简单的通过关键字，爬出百度知道的一些搜索数据。 
例如：问题，提问时间；答案文本，答案时间，点赞数，拍砖数，回答人，回答人级别，搜索的关键字等。答案可以有多个，每个问题有多个答案应都保存。保存数据在MySql中。在这里需要用到一个牛人的爬虫框架： 
WebMagic 
网址：http: 
---


转载请注明出处：http://blog.csdn.net/qq_26525215
本文源自【大学之旅_谙忆的博客】
简单的通过关键字，爬出百度知道的一些搜索数据。 
例如：问题，提问时间；答案文本，答案时间，点赞数，拍砖数，回答人，回答人级别，搜索的关键字等。答案可以有多个，每个问题有多个答案应都保存。保存数据在MySql中。在这里需要用到一个牛人的爬虫框架： 
WebMagic 
网址：http:
&#60;!-- more --&#62;
----------


简单的通过关键字，爬出百度知道的一些搜索数据。
例如：问题，提问时间；答案文本，答案时间，点赞数，拍砖数，回答人，回答人级别，搜索的关键字等。

答案可以有多个，每个问题有多个答案应都保存。保存数据在MySql中。

在这里需要用到一个牛人的爬虫框架：
WebMagic
网址：http://webmagic.io/docs/zh/

我用的是IEDA工具，建立的是Maven项目。

要搞爬虫，一些基础的学习是不可少的，比如HTML，JSP等前台知识，知道怎么解析xml文档(利用XPath)，用开发工具(推荐Intellij IDEA)，MySQL，Maven也可以学习等等。

下面就开始讲怎么抓取百度知道的数据了。

![](http://img.blog.csdn.net/20170228203113590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

我们用百度知道搜索的时候，可以看地址栏：
https://zhidao.baidu.com/search?ct=17&pn=0&tn=ikaslist&rn=10&word=%E7%A4%BE%E4%BF%9D%E8%BD%AC%E7%A7%BB&fr=wwwt

这里关键词的变量名是word。那么其他变量与值可以不用管它。

缩减一下地址：
https://zhidao.baidu.com/search?word=社保迁移

还有重要的一点是，百度知道的html的编码是GBK的！注意编码不要搞错了。

这个时候我们就可以利用这个地址来进行一些事情了。

需要学会用浏览器查看网页源码哦。

![](http://img.blog.csdn.net/20170228203556280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

通过这种方式，我们可以找出标题的规律，进而通过XPath解析，得到标题名！

![](http://img.blog.csdn.net/20170228203708063?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

这些数据(标题，问题描述，答案，时间等)都是可以通过上面方式得到的！

这里有个小问题，就是点赞数和拍砖数这样是找不到正确的方式的，因为那里是动态生成。

在这里做一个演示：
![](http://img.blog.csdn.net/20170228203927065?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

通过火狐浏览器的查看元素源码，是这样的。

通过在地址栏前面加: view-source: 可以看网页源码。
一般点击鼠标右键，可以直接看网页源码。

![](http://img.blog.csdn.net/20170228204057767?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

这个时候，我们并不可以在源码中看到刚刚的代码。

也就是说，我们抓取网页的源码的时候，获取到的html也是没有那个的，怎么办，这个时候，我们会发现，

```html
&#60;span 
		alog-action="qb-zan-btnbestbox" 
		class="iknow-qb_home_icons evaluate evaluate-32
						" 
		id="evaluate-2225390772" 
		data-evaluate="7" 
		&#62;
&#60;/span&#62;
```
data-evaluate="7" 
正好与点赞数7一样！
继续对比一下其他页面，会发现这个属性的值就是点赞数！

那么好办了，通过XPath然后加工一下，一样可以获取此值。
拍砖数一样的分析，然后获取就行！

至于其他的数据，差不多都是这样分析的。

开始本来想做成Web应用，结果WebMagic爬虫框架只能在main线程才能运行，所以就只做了一个简单的用main函数启动的应用了。

用到了MyBatis和Spring。主要是为了操作数据库简单一点。
你可以不用框架的，主要代码只有这个类的代码：

```java
package cn.hncu;

import cn.hncu.model.Answer;
import cn.hncu.model.Keyword;
import cn.hncu.model.KeywordProblemKey;
import cn.hncu.model.Problem;
import cn.hncu.service.KeywordService;
import cn.hncu.service.KeywordServiceImpl;
import cn.hncu.tool.*;
import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Controller;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Site;
import us.codecraft.webmagic.Spider;
import us.codecraft.webmagic.processor.PageProcessor;
import us.codecraft.webmagic.selector.Html;

import javax.xml.xpath.XPath;
import java.io.IOException;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.util.*;

/**
 * Created with IntelliJ IDEA.
 * User: 陈浩翔.
 * Date: 2017/2/27.
 * Time: 下午 6:29.
 * Explain:
 */
public class Entrance implements PageProcessor {
    private Logger logger = LoggerFactory.getLogger(Entrance.class);
    private static ApplicationContext context;
    private static KeywordService keywordService;

    //搜索的关键字
    private static String keyword = "社保转移";
    //百度知道的搜索前缀
    private static String url = "https://zhidao.baidu.com/search?word=";
    //设置抓取页数
    private static Integer pages = 20;

    private Site site = Site.me().setCharset("gbk").setRetrySleepTime(4).setSleepTime(100);
    private static String keywordId ;
    private List&#60;Map&#60;String,String&#62;&#62; lists;

    @Override
    public void process(Page page) {
        Html html = page.getHtml();
        //问题
        String problem = html.xpath("//span[@class='ask-title']/text()").toString();
        logger.info("问题："+problem);
        //提问者
        String problemAnthor = html.xpath("//a[@alog-action='qb-ask-uname']/text()").toString();
        //logger.info("提问者:"+problemAnthor);
        //问题描述
        String problemDescribe = html.xpath("//span[@class='con']/text()").toString();
        //logger.info("问题描述:"+problemDescribe);
        //提问时间
        if(problem==null) {
            lists = new ArrayList&#60;Map&#60;String, String&#62;&#62;();
            List&#60;String&#62; strs = html.xpath("//dd/span[@class='mr-8']/text()").all();
            List&#60;String&#62; quizTimes = new ArrayList&#60;String&#62;();
            for (int i=0;i&#60;strs.size();i++) {
                //logger.info(strs.get(i)+"  "+strs.get(i).matches("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]"));
                if(strs.get(i).matches("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]")){
                    quizTimes.add(strs.get(i));
                }
            }
            List&#60;String&#62; portionProblems = html.xpath("//a[@class='ti']/text()").all();
            //logger.info("quizTimes.size():" + quizTimes.size());
            //logger.info("portionProblems.size():" + portionProblems.size());
            if(quizTimes.size()==portionProblems.size()) {
                for (int i=0;i&#60;quizTimes.size();i++) {
                    Map&#60;String,String&#62; map = new HashMap&#60;String,String&#62;();
                    map.put("quizTimes",quizTimes.get(i));
                    map.put("portionProblems",portionProblems.get(i));
                    lists.add(map);
                    //logger.info("部分问题:" + lists.get(i).get("portionProblems"));
                    //logger.info("时间:" + lists.get(i).get("quizTimes"));
                }
            }
        }

        //最佳回答
        String bestAnswer =html.xpath("//pre[@class='best-text mb-10']").toString();//图片文字无法处理
        if(bestAnswer==null){
            bestAnswer =html.xpath("//div[@class='best-text mb-10']").toString();
        }
        //logger.info("最佳回答:"+bestAnswer);
        //回答者
        String answerAuthor = html.xpath("//a[@class='mavin-name f-14 mr-10']/text()").toString();
        //如果回答者为NULL-有可能是其他的没有认证的人回答的
        if(answerAuthor==null){
            answerAuthor = html.xpath("//div[@class='grid f-aid ff-arial']/p/a[@class='user-name']/text()").toString();
        }
        //如果回答者还是为NULL-有可能是网上的人贡献的
        if(answerAuthor==null){
            answerAuthor = html.xpath("//div[@class='grid f-aid ff-arial']/p[@class='mb-5']/span/text()").toString();
        }
        //logger.info("回答者:"+answerAuthor);

        //回答者等级
        String anthorGrade = html.xpath("//a[@class='mavin-reply-icon f-orange']/text()").toString();
        //如果回答者等级为NULL-有可能是其他的没有认证的人回答的
        if(anthorGrade==null){
            anthorGrade = html.xpath("//div[@class='grid f-aid ff-arial']/p[@class='mb-5']/a[@class='i-gradeIndex']").toString();
            if(anthorGrade!=null){
                anthorGrade = "LV"+anthorGrade.substring(anthorGrade.lastIndexOf("Index-")+6,anthorGrade.lastIndexOf(" mr-10"));
            }
        }
        if(answerAuthor!=null&&anthorGrade==null){
            anthorGrade ="0";
        }
        //logger.info("回答者等级:"+anthorGrade);

        //推荐时间
        String answerTime = html.xpath("//span[@class='grid-r f-aid pos-time answer-time f-pening']/text()").toString();
        //logger.info("推荐时间:"+answerTime);

        //最佳回答点赞数
        String pointPraise =html.xpath("//span[@alog-action='qb-zan-btnbestbox']").toString();
        if(pointPraise!=null) {
            pointPraise = pointPraise.substring(pointPraise.lastIndexOf("evaluate"))
                    .replaceAll("evaluate=\"", "")
                    .replaceAll("\"&#62; &#60;/span&#62;", "");
        }
        //logger.info("最佳回答点赞数:"+pointPraise);
        //最佳回答拍砖数
        String contemptNumber =html.xpath("//span[@alog-action='qb-evaluate-outer']").toString();
        if(contemptNumber!=null) {
            contemptNumber = contemptNumber.substring(contemptNumber.lastIndexOf("evaluate"))
                    .replaceAll("evaluate=\"", "")
                    .replaceAll("\"&#62; &#60;/span&#62;", "");
        }
        //logger.info("最佳回答拍砖数:"+contemptNumber);

        //将发布时间和问题放到一块去，这里需要匹配
        String quizTimes = null;//这个判断有漏洞的！！！
        if(problem!=null) {
            for (int i = 0; i &#60; lists.size(); i++) {
                String portionProblem = lists.get(i).get("portionProblems");
                String time = lists.get(i).get("quizTimes");
                boolean isThisProblem = true;
                for (int j = 0; j &#60; portionProblem.length(); j++) {
                    if(problem.indexOf(portionProblem.charAt(j))==-1){
                        isThisProblem = false;
                    }
                }
                if(isThisProblem){
                    quizTimes = time;
                    continue;
                }
            }
        }
        //发表时间
        //logger.info("发表时间："+quizTimes);

        //其他回答答案
        List&#60;String&#62; otherAnswers =html.xpath("//div[@class='answer-text']/span").all();
        //logger.info("其他回答答案："+otherAnswers);
        //其他回答的回答时间
        List&#60;String&#62; otherAnswerTime =html.xpath("//div[@class='grid pt-5']/span[@class='pos-time']/text()").all();
        //logger.info("其他回答的回答时间："+otherAnswerTime);
        //其他回答的回答者
        List&#60;String&#62; otherAnswerAnthors =html.xpath("//a[@alog-action='qb-username' and @class='user-name']/text()").all();
        //logger.info("其他回答的回答者："+otherAnswerAnthors);
        //其他回答的回答者等级
        List&#60;String&#62; otherAnswerAnthorGradesLists =html.xpath("//div[@class='grid pt-5']/span[@class='i-gradeIndex']").all();
        List&#60;String&#62; otherAnswerAnthorGrades = new ArrayList&#60;String&#62;();
        if(otherAnswerAnthorGradesLists!=null){
            for(int i=0;i&#60;otherAnswerAnthorGradesLists.size();i++){
                otherAnswerAnthorGrades.add("LV"+otherAnswerAnthorGradesLists.get(i).substring(otherAnswerAnthorGradesLists.get(i).lastIndexOf("Index-")+6,otherAnswerAnthorGradesLists.get(i).lastIndexOf("\"&#62;&#60;/span&#62;")));
            }
        }
        //logger.info("其他回答的回答者等级："+otherAnswerAnthorGrades);
        //其他回答的点赞数
        List&#60;String&#62; otherAnswerPointPraiseLists =html.xpath("//span[@alog-action='qb-zan-btn']").all();
        List&#60;String&#62; otherAnswerPointPraises = new ArrayList&#60;String&#62;();
        if(otherAnswerPointPraiseLists!=null) {
            for(int i=0;i&#60;otherAnswerPointPraiseLists.size();i++) {
                otherAnswerPointPraises.add(otherAnswerPointPraiseLists.get(i).substring(otherAnswerPointPraiseLists.get(i).lastIndexOf("evaluate"))
                        .replaceAll("evaluate=\"", "")
                        .replaceAll("\"&#62; &#60;/span&#62;", ""));
            }
        }
        //logger.info("其他回答的点赞数："+otherAnswerPointPraises);
        //其他回答的拍砖数
        List&#60;String&#62; otherAnswerContemptNumberLists =html.xpath("//div[@class='pos-relative']/div[@class='qb-zan-eva']/span[@alog-action='qb-evaluate-outer']").all();
        List&#60;String&#62; otherAnswerContemptNumbers = new ArrayList&#60;String&#62;();
        if(otherAnswerContemptNumberLists!=null) {
            for(int i=0;i&#60;otherAnswerContemptNumberLists.size();i++) {
                otherAnswerContemptNumbers.add( otherAnswerContemptNumberLists.get(i).substring(otherAnswerContemptNumberLists.get(i).lastIndexOf("evaluate"))
                        .replaceAll("evaluate=\"", "")
                        .replaceAll("\"&#62; &#60;/span&#62;", ""));
            }
        }
        //logger.info("其他回答的拍砖数："+otherAnswerContemptNumbers);

        //如果为了效率，可以开线程去存数据的
        if(answerAuthor!=null || otherAnswers.size()!=0){
            //问题表数据
            Problem p = new Problem();
            String problemId = cn.hncu.tool.UUID.getId();
            p.setId(problemId);
            p.setProblem(problem);
            p.setQuizTime(quizTimes);
            p.setProblemAnthor(problemAnthor);
            p.setProblemDescribe(problemDescribe);
            //关键字—问题关系表数据
            KeywordProblemKey keywordProblemKey = new KeywordProblemKey();
            keywordProblemKey.setKeywordId(keywordId);
            keywordProblemKey.setProblemId(problemId);
            //最佳答案数据
            List&#60;Answer&#62; answers = new ArrayList&#60;Answer&#62;();

            Answer answer = new Answer();
            answer.setId(cn.hncu.tool.UUID.getId());
            answer.setProblemId(problemId);
            answer.setAnswerAnthor(answerAuthor);
            answer.setAnswer(bestAnswer);
            answer.setAnthorGrade(anthorGrade);
            answer.setPointPraise(pointPraise);
            answer.setAnswerTime(answerTime);
            answer.setContemptNumber(contemptNumber);
            answers.add(answer);

            //其他答案数据
            Integer otherAnswersSize = otherAnswers.size();
            for(int i=0;i&#60;otherAnswersSize;i++){
                answer = new Answer();
                answer.setId(cn.hncu.tool.UUID.getId());
                answer.setProblemId(problemId);
                if(otherAnswerAnthors.size()&#62;i)
                    answer.setAnswerAnthor(otherAnswerAnthors.get(i));
                if(otherAnswers.size()&#62;i)
                    answer.setAnswer(otherAnswers.get(i));
                if(otherAnswerAnthorGrades.size()&#62;i)
                    answer.setAnthorGrade(otherAnswerAnthorGrades.get(i));
                if(otherAnswerPointPraises.size()&#62;i)
                    answer.setPointPraise(otherAnswerPointPraises.get(i));
                if(otherAnswerTime.size()&#62;i)
                    answer.setAnswerTime(otherAnswerTime.get(i));
                if(otherAnswerContemptNumbers.size()&#62;i)
                    answer.setContemptNumber(otherAnswerContemptNumbers.get(i));
                answers.add(answer);
            }
            keywordService.insertAll(p,keywordProblemKey,answers);

        }
//        if (page.getResultItems().get("name") == null) {
//            //skip this page
//            page.setSkip(true);
//        }

        // 从搜索页面发现后续的url地址来抓取
//        List&#60;String&#62; urls = html.links().regex("(http://zhidao.baidu.com/question/.+"+"\\?"+".+[^\"])").all();
//        for(String url:urls){
//            logger.info(url);
//        }
        if(problem==null) {
            page.addTargetRequests(html.links().regex("(http://zhidao.baidu.com/question/.+"+"\\?"+".+[^\"])").all());
            for(int i=1;i&#60;pages;i++){
                List&#60;String&#62; lists = new ArrayList&#60;String&#62;();
                lists.add(url+keyword+"&site=-1&sites=0&date=0&pn="+(i*10));
                page.addTargetRequests(lists);
            }
            pages=0;//只加一次进队列！
        }
    }

    @Override
    public Site getSite() {
        return site;
    }

    public static void main(String[] args) throws IOException {
        //使用"spring.xml"和"spring-mybatis.xml"这两个配置文件创建Spring上下文
        context = new ClassPathXmlApplicationContext("spring.xml", "spring-mybatis.xml");
        keywordService = (KeywordService) context.getBean("keywordService");

        //存储关键字表
        Date searchTime = new Date();//搜索的时间
        keywordId = cn.hncu.tool.UUID.getId();
        Keyword keyword = new Keyword();
        keyword.setId(keywordId);
        keyword.setKeyword(Entrance.keyword);
        keyword.setSearchTime(searchTime);
        keywordService.insertKeyword(keyword);

        Spider.create(new Entrance()).addUrl(url+Entrance.keyword)
                //.addPipeline(new JsonFilePipeline("D:\\test\\"))
                //开启 *个线程抓取
                .thread(50)
                //同步启动爬虫
                .run();
    }
}

```

数据库很简单，看你自己需要哪些数据，就建立哪些字段和表就行。

![](http://img.blog.csdn.net/20170228210533716?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjY1MjUyMTU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)

建立MySQL数据表的文件在项目的src/main/resources/sql/1.sql

#源代码下载地址：
GITHUB源码下载地址:【**[点我进行下载](https://github.com/chenhaoxiang/reptile/tree/master/reptileHello' "点我进行下载")**】
