---
layout: post
title: "HDOJ 2037 今年暑假不AC"
date: 2016-01-24 01:53:40 +0800
comments: true
categories:❶ ACM,----- HDOJ-JAVA,❺ 算法及基础题,----- 贪心算法和背包问题
tags: []
keyword: 陈浩翔, 谙忆
description: Problem Description 
“今年暑假不AC？” 
“是的。” 
“那你干什么呢？” 
“看世界杯呀，笨蛋！” 
“@#$%^&*%…”确实如此，世界杯来了，球迷的节日也来了，估计很多ACMer也会抛开电脑，奔向电视了。 
作为球迷，一定想看尽量多的完整的比赛，当然，作为新时代的好青年，你一定还会看一些其它的节目，比如新闻联播（永远不要忘记关心国家大事）、非常6+7、超级女生，以及王小 
---


Problem Description 
“今年暑假不AC？” 
“是的。” 
“那你干什么呢？” 
“看世界杯呀，笨蛋！” 
“@#$%^&*%…”确实如此，世界杯来了，球迷的节日也来了，估计很多ACMer也会抛开电脑，奔向电视了。 
作为球迷，一定想看尽量多的完整的比赛，当然，作为新时代的好青年，你一定还会看一些其它的节目，比如新闻联播（永远不要忘记关心国家大事）、非常6+7、超级女生，以及王小
<!-- more -->
----------

Problem Description
“今年暑假不AC？”
“是的。”
“那你干什么呢？”
“看世界杯呀，笨蛋！”
“@#$%^&*%...”

确实如此，世界杯来了，球迷的节日也来了，估计很多ACMer也会抛开电脑，奔向电视了。
作为球迷，一定想看尽量多的完整的比赛，当然，作为新时代的好青年，你一定还会看一些其它的节目，比如新闻联播（永远不要忘记关心国家大事）、非常6+7、超级女生，以及王小丫的《开心辞典》等等，假设你已经知道了所有你喜欢看的电视节目的转播时间表，你会合理安排吗？（目标是能看尽量多的完整节目）

 

Input
输入数据包含多个测试实例，每个测试实例的第一行只有一个整数n(n<=100)，表示你喜欢看的节目的总数，然后是n行数据，每行包括两个数据Ti_s,Ti_e (1<=i<=n)，分别表示第i个节目的开始和结束时间，为了简化问题，每个时间都用一个正整数表示。n=0表示输入结束，不做处理。

 

Output
对于每个测试实例，输出能完整看到的电视节目的个数，每个测试实例的输出占一行。
 

Sample Input
12
1 3
3 4
0 7
3 8
15 19
15 20
10 15
8 18
6 12
5 10
4 14
2 9
0
 

Sample Output
5


利用贪心算法，先把结束时间从小到大排好序；
排好序后，排在第一个的一定是第一个先表演的节目；
再比较后面的开始时间，大于等于第一个的结束时间的，就可以选择为下一个表演、以此类推、、、

例子：
![](http://img.blog.csdn.net/20160124135249080)


```
import java.util.Scanner;

public class Main{

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            int n = sc.nextInt();
            if(n==0){
                return ;
            }
            int[][] time = new int[n][2]; 
            
            for(int i=0;i<n;i++){
                time[i][0] = sc.nextInt();
                time[i][1] = sc.nextInt();
            }
            
            int times = 1;
            for(int i=0;i<n-1;i++){
                for(int j =i+1;j<n;j++){
                    if(time[j][1]<time[i][1]){
                        int temp = time[j][1];
                        time[j][1] = time[i][1];
                        time[i][1] = temp;
                        int temp1 = time[j][0];
                        time[j][0] = time[i][0];
                        time[i][0] = temp1;
                    }
                }
            }
//            for(int i=0;i<n;i++){
//                System.out.println(time[i][0]+" "+time[i][1]);
//                
//            }
            
            
            int t = time[0][1];
            for(int i=1;i<n;i++){
                if(time[i][0]>=t){
                    t = time[i][1];
                    times++;
                }
                
            }
            System.out.println(times);
            
        }
    }
}

```



本文章由<a href="http://chenhaoxiang.cn/">[谙忆]</a>编写， 所有权利保留。 
欢迎转载，分享是进步的源泉。
<blockquote cite='陈浩翔'>
<p background-color='#D3D3D3'>转载请注明出处：<a href='http://chenhaoxiang.cn'><font color="green">http://chenhaoxiang.cn</font></a><br><br>
本文源自<strong>【<a href='http://chenhaoxiang.cn' target='_blank'>人生之旅_谙忆的博客</a>】</strong></p>
</blockquote>
