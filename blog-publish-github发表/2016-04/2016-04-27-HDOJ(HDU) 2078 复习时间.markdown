---
layout: post
title: "HDOJ(HDU) 2078 复习时间"
date: 2016-04-27 05:51:08 +0800
comments: true
categories:❶ ACM,----- HDOJ-JAVA,❺ 算法及基础题,----- 基础题
tags: []
keyword: 陈浩翔, 谙忆
description: Problem Description 
为了能过个好年，xhd开始复习了，于是每天晚上背着书往教室跑。xhd复习有个习惯，在复习完一门课后，他总是挑一门更简单的课进行复习，而他复习这门课的效率为两门课的难度差的平方,而复习第一门课的效率为100和这门课的难度差的平方。xhd这学期选了n门课，但是一晚上他最多只能复习m门课，请问他一晚上复习的最高效率值是多少？Input 
输入数据的第一行是一个数据 
---


Problem Description 
为了能过个好年，xhd开始复习了，于是每天晚上背着书往教室跑。xhd复习有个习惯，在复习完一门课后，他总是挑一门更简单的课进行复习，而他复习这门课的效率为两门课的难度差的平方,而复习第一门课的效率为100和这门课的难度差的平方。xhd这学期选了n门课，但是一晚上他最多只能复习m门课，请问他一晚上复习的最高效率值是多少？Input 
输入数据的第一行是一个数据
<!-- more -->
----------

Problem Description
为了能过个好年，xhd开始复习了，于是每天晚上背着书往教室跑。xhd复习有个习惯，在复习完一门课后，他总是挑一门更简单的课进行复习，而他复习这门课的效率为两门课的难度差的平方,而复习第一门课的效率为100和这门课的难度差的平方。xhd这学期选了n门课，但是一晚上他最多只能复习m门课，请问他一晚上复习的最高效率值是多少？

 

Input
输入数据的第一行是一个数据T，表示有T组数据。
每组数据的第一行是两个整数n(1 <= n <= 40)，m(1 <= m <= n)。
接着有n行，每行有一个正整数a(1 <= a <= 100)，表示这门课的难度值。

 

Output
对于每组输入数据，输出一个整数，表示最高效率值。

 

Sample Input
2
2 2
52
25
12 5
89
64
6
43
56
72
92
23
20
22
37
31
 

Sample Output
5625
8836 



理解分析一：
由题意我们很容易了解到 : 前一门课为 N, 后一门课为 M , 则学习  M 课的效率为 ( N - M )2  , 那么学习第一节的效率为
  ( 100 - N )2   , 有题目我们知道: 下一门需要学习的课比上一次更 简单,   所以 N > M, 那么此时学习的效率为 : 
F1 = ( 100 - N  )2 + ( N - M )2 = 1002 - 2*100*N + N2 + N2 - 2*N*M + M2 =  1002 + M2 - 2*N*( 100+M-N ); 
而直接学习最简单的课程的效率为:
F2 = ( 100 - M )2 = 1002 +M2 - 2*100*M  
因为  2*N*( 100+M-N ) - 2*100*M = ( N - M ) * ( 200 - 2*N )  ,有上面的分析我们知道 N > M , N < 100 , 于是就有 
( N - M ) * ( 200 - 2*N )  > 0 ; 也就是说 F2 > F1 ;
有分析可以看出 , 要想效率最高, 只需要找出简单的课程直接学习就可以了.

理解分析二：
根据公式：(a+b)^2  >  a^2 + b^2 
a、b表示两次的难度差，所以直接复习最简单的一门课效率最高。


```
import java.util.Arrays;
import java.util.Scanner;
/**
 * (a+b)^2 > a^2 + b^2
 * a、b表示两次难度差，所以直接复习最简单的一门课效率最高
 * @author 陈浩翔
 * 2016-4-27
 */
public class Main{

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t-->0){
			int n = sc.nextInt();
			int m = sc.nextInt();
			int s[] = new int[n];
			for(int i=0;i<n;i++){
				s[i] = sc.nextInt();
			}
			Arrays.sort(s);
			System.out.println((100-s[0])*(100-s[0]));
		}
	}
}

```



本文章由<a href="http://chenhaoxiang.cn/">[谙忆]</a>编写， 所有权利保留。 
欢迎转载，分享是进步的源泉。
<blockquote cite='陈浩翔'>
<p background-color='#D3D3D3'>转载请注明出处：<a href='http://chenhaoxiang.cn'><font color="green">http://chenhaoxiang.cn</font></a><br><br>
本文源自<strong>【<a href='http://chenhaoxiang.cn' target='_blank'>人生之旅_谙忆的博客</a>】</strong></p>
</blockquote>
