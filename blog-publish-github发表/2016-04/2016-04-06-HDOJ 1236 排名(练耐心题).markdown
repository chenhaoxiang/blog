---
layout: post
title: "HDOJ 1236 排名(练耐心题)"
date: 2016-04-06 03:07:39 +0800
comments: true
categories:❶ ACM,----- HDOJ-JAVA,❺ 算法及基础题,----- 基础题
tags: [java,acm]
keyword: 陈浩翔, 谙忆
description: Problem Description 
今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑  
每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的  
考生，并将他们的成绩按降序打印。 Input 
测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 < N  
< 1000 )、考题数M ( 0 < M < 
---


Problem Description 
今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑  
每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的  
考生，并将他们的成绩按降序打印。 Input 
测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 < N  
< 1000 )、考题数M ( 0 < M <
<!-- more -->
----------

Problem Description
今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑 
每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的 
考生，并将他们的成绩按降序打印。 

 

Input
测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 < N 
< 1000 )、考题数M ( 0 < M < = 10 )、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一 
名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号 
（题目号由1到M）。 
当读入的考生人数为0时，输入结束，该场考试不予处理。 

 

Output
对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高 
到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考 
号的升序输出。 

 

Sample Input
4 5 25
10 10 12 13 15
CS004 3 5 1 3
CS003 5 2 4 1 3 5
CS002 2 1 2
CS001 3 2 3 5
1 2 40
10 30
CS001 1 2
2 3 20
10 10 10
CS000000000000000001 0
CS000000000000000002 2 1 2
0
 

Sample Output
3
CS003 60
CS001 37
CS004 37
0
1
CS000000000000000002 20

题意：大水题！
练基础很适合！


```
import java.util.Scanner;

public class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(sc.hasNext()){
			int n=sc.nextInt();
			if(n==0){
				return ;
			}
			int m = sc.nextInt();
			int g = sc.nextInt();
			
			int[] gm = new int[m+1];
			for(int i=1;i<gm.length;i++){
				gm[i]=sc.nextInt();
			}
			String[] str = new String[n];
			int k=0;
			String[] idstr = new String[n];
			int[] idn = new int[n];
			for(int i=0;i<n;i++){
				idstr[i] = sc.next();
				//System.out.println(id);
				idn[i] = sc.nextInt();
				int[] idnm = new int[idn[i]];
				int sum=0;
				for(int j=0;j<idn[i];j++){
					idnm[j]=sc.nextInt();
					sum= sum + gm[idnm[j]];
				}
				if(sum>=g){
					str[k++]=idstr[i]+" "+sum;
				}
			}
			
			if(k==0){
				System.out.println(0);
				continue;
			}
			//System.out.println("aaa");
//			else{
//				for(int i=0;i<k;i++){
//					System.out.println(str[i]);
//				}
//			}
			
			String[] strs= new String[k];
			int strm[] = new int[k];
			for(int i=0;i<k;i++){
				String[] strTemp = new String[2];
				strTemp = str[i].split(" ");
				strs[i]=strTemp[0];
				strm[i]=Integer.parseInt(strTemp[1]);
			}
			
			for(int i=0;i<k-1;i++){
				for(int j=i+1;j<k;j++){
					if(strm[i]<strm[j]){
						strm[i]=strm[i]^strm[j];
						strm[j]=strm[i]^strm[j];
						strm[i]=strm[i]^strm[j];
						
						String s=strs[i];
						strs[i]=strs[j];
						strs[j]=s;
					}
					
					if(strm[i]==strm[j]){
						if(strs[i].compareTo(strs[j])>0){
							strm[i]=strm[i]^strm[j];
							strm[j]=strm[i]^strm[j];
							strm[i]=strm[i]^strm[j];
							
							String s=strs[i];
							strs[i]=strs[j];
							strs[j]=s;
						}
					}
				}
			}
			
			System.out.println(k);
			for(int i=0;i<k;i++){
				System.out.print(strs[i]);
				System.out.println(" "+strm[i]);
			}
			
		}
	}
}

```

本文章由<a href="http://chenhaoxiang.cn/">[谙忆]</a>编写， 所有权利保留。 
欢迎转载，分享是进步的源泉。
<blockquote cite='陈浩翔'>
<p background-color='#D3D3D3'>转载请注明出处：<a href='http://chenhaoxiang.cn'><font color="green">http://chenhaoxiang.cn</font></a><br><br>
本文源自<strong>【<a href='http://chenhaoxiang.cn' target='_blank'>人生之旅_谙忆的博客</a>】</strong></p>
</blockquote>
