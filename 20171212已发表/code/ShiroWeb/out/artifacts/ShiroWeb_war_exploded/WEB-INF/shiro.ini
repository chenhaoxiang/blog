[main]
authc.loginUrl=/login
;这里的配置为authc验证没通过请求的路径  loginUrl为一个属性名 org.apache.shiro.web.filter.authc.FormAuthenticationFilter类中
roles.unauthorizedUrl=unauthorized.jsp
;roles 角色认证未通过去请求的Url  在org.apache.shiro.web.filter.authz.AuthorizationFilter可以看到unauthorizedUrl这个属性
perms.unauthorizedUrl=unauthorized.jsp
;权限认证未通过
MyRealm=cn.chenhaoxiang.realm.MyRealm
;内置对象  可以写多个，用逗号隔开
securityManager.realms=$MyRealm

[urls]
/login=anon
;请求login需要的权限,只要游客就行，或者不进行验证 anon

/admin*=authc
;会进行身份验证   authc 对应的是过滤器

;权限拦截是有顺序的，需要先进行身份验证(也就是登录成功)，也就是登录后才有权限角色等认证
/student=roles[teacher,admin]
;请求student url 必须拥有roles的teacher角色登录

/teacher=perms["user:create"]
;必须要有teacher的user:create操作才能访问teacher这个url
